[buildout]
<<<<<<< HEAD
extends =
    sources.cfg
show-picked-versions = true
extensions =
    mr.developer

index = https://pypi.python.org/simple/

parts =
    instance
    test
    code-analysis
    coverage
    test-coverage
    createcoverage
    releaser
    i18ndude
    omelette
    robot
    plone-helper-scripts
    vscode

develop = .

=======
parts =
    instance
    omelette
    coverage
    test
    robot
    test-coverage
    releaser
    code-analysis
    i18ndude

develop = .
unzip = true

package-min-coverage = 80

[code-analysis]
recipe = plone.recipe.codeanalysis
directory = ${buildout:directory}/src
flake8-ignore = C901,E241,F402
flake8-max-complexity = 20
clean-lines = False
imports = True
debug-statements = True
utf8-header = True
>>>>>>> make buildout work again

[instance]
recipe = plone.recipe.zope2instance
user = admin:admin
http-address = 8080
<<<<<<< HEAD
environment-vars =
    zope_i18n_compile_mo_files true
eggs =
    Plone
    Pillow
    bda.plone.productshop [test]


[code-analysis]
recipe = plone.recipe.codeanalysis
directory = ${buildout:directory}/src/bda
return-status-codes = False


[omelette]
recipe = collective.recipe.omelette
eggs = ${instance:eggs}


[test]
recipe = zc.recipe.testrunner
eggs = ${instance:eggs}
initialization =
    os.environ['TZ'] = 'UTC'
defaults = ['-s', 'bda.plone.productshop', '--auto-color', '--auto-progress']

=======
debug-mode = on
verbose-security = off
deprecation-warnings = on
blob-storage = var/blobstorage

eggs =
    Pillow
    bda.plone.productshop
    ipdb

zcml =
    bda.plone.productshop

[releaser]
recipe = zc.recipe.egg
eggs = zest.releaser[recommended]

[test]
recipe = zc.recipe.testrunner
eggs =
    ipdb
    souper
    souper.plone[test]
    bda.plone.cart[test]
    bda.plone.checkout[test]
    bda.plone.discount[test]
    bda.plone.orders[test]
    bda.plone.payment[test]
    bda.plone.shipping[test]
    bda.plone.shop[test]
    bda.plone.productshop[test]

[robot]
recipe = zc.recipe.egg
eggs =
    ${test:eggs}
    plone.app.robotframework
    ipdb
    plone.reload
    plone.app.debugtoolbar
    Products.PrintingMailHost
>>>>>>> make buildout work again

[coverage]
recipe = zc.recipe.egg
eggs = coverage

<<<<<<< HEAD

=======
>>>>>>> make buildout work again
[test-coverage]
recipe = collective.recipe.template
input = inline:
    #!/bin/bash
<<<<<<< HEAD
    export TZ=UTC
    ${buildout:directory}/bin/coverage run bin/test $*
=======
    ${buildout:directory}/bin/coverage run --source=${buildout:directory}/src/bda/plone/shop bin/test
>>>>>>> make buildout work again
    ${buildout:directory}/bin/coverage html
    ${buildout:directory}/bin/coverage report -m --fail-under=90
    # Fail (exit status 1) if coverage returns exit status 2 (this happens
    # when test coverage is below 100%.
output = ${buildout:directory}/bin/test-coverage
mode = 755

<<<<<<< HEAD

[createcoverage]
recipe = zc.recipe.egg
eggs = createcoverage


[robot]
recipe = zc.recipe.egg
eggs =
    ${test:eggs}
    plone.app.robotframework[debug,reload]


[releaser]
recipe = zc.recipe.egg
eggs = zest.releaser


[i18ndude]
recipe = zc.recipe.egg
eggs = i18ndude

[plone-helper-scripts]
recipe = zc.recipe.egg
eggs =
   Products.CMFPlone
   ${instance:eggs}
interpreter = zopepy
scripts =
   zopepy
   plone-compile-resources

[versions]
# Don't use a released version of bda.plone.productshop
bda.plone.productshop =
yafowil.plone = >=4.0.0a3

[vscode]
recipe = collective.recipe.vscode
eggs = ${test:eggs}
flake8-enabled = false
black-enabled = true
generate-envfile = true
=======
[omelette]
recipe = collective.recipe.omelette
eggs =
    ${instance:eggs}
ignore-develop = true

[i18ndude]
unzip = true
recipe = zc.recipe.egg
eggs = i18ndude
>>>>>>> make buildout work again
